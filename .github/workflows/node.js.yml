name: Deploy to Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [20]

    name: Node ${{ matrix.node }} sample
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Run Lint and TypeScript Check
        run: |
          npm install
          npm run lint
          npm run type-check

      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            cd ${{ secrets.WORK_DIR }}
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull
            npm install
            npm run build
            pm2 restart sa-app-fe

      - name: Send Telegram Notification
        if: always()
        run: |
          STATUS="FE Deployment succeeded ✅"
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="FE Deployment failed ❌"
          fi
          MESSAGE="Job ${{ github.job }} (#${{ github.run_number }}) - $STATUS"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d "text=$MESSAGE"
